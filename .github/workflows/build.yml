name: release

on:
  push:
    tags:
      - pypi-*
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: tree-sitter/py-tree-sitter
          ref: v0.20.0
          submodules: true
          path: py-tree-sitter
      - uses: actions/checkout@v3
        with:
          repository: grantjenks/py-tree-sitter-languages
          ref: v1.4.0
          path: py-tree-sitter-languages

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - run: mv py-tree-sitter/tree_sitter .
        shell: bash

      - run: mv py-tree-sitter-languages/{tree_sitter_languages,build.py,repos.txt} .
        shell: bash

      # Create a tests directory that contains tests from both py-tree-sitter and py-tree-sitter-languages.
      - run: mkdir tests
        shell: bash
      - run: mv {py-tree-sitter,py-tree-sitter-languages}/tests/*.py tests/
        shell: bash

      # cibuildwheel uses a funny working directory when running tests.
      # This is by design, this way tests import whatever is installed and not from the project.
      # If there is __init__.py, it causes pytest to be "helpful" by making sys.path[0] the project directory.
      - run: rm tests/__init__.py
        shell: bash

      - run: ls -l tests
        shell: bash

      # Change test_tree_sitter.py to use py-tree-sitter-languages
      - run: git apply py-tree-sitter-tests.patch

      # py-tree-sitter-languages uses pytest to run tests, which is compatible with the
      # unittest tests that py-tree-sitter has.
#      - name: 'Get CIBW_* environment variables from py-tree-sitter-languages'
#        run: |
#          grep CIBW_ py-tree-sitter-languages/.github/workflows/release.yml | sed s/'^ *'// | sed s/': '/=/ | tee -a $GITHUB_ENV
#        shell: bash

      # Build wheels
      - run: pip install cibuildwheel==2.9.0
      - run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp38-win_amd64
          CIBW_BEFORE_BUILD: pip install cython==0.29.32 && pip install -e . && python build.py
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest {package}/tests

      # Make wheels downloadable from GitHub UI and from the pypi step
      - uses: actions/upload-artifact@v2
        with:
          name: wheelhouse
          path: ./wheelhouse/*.whl

  release:
    runs-on: ubuntu-latest
    # https://stackoverflow.com/a/58478262
    needs: [build]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheelhouse
          path: dist
      - run: ls -la
      - run: ls -la dist

      # To trigger a release:
      #
      #   $ git tag pypi-$(date +%Y.%m.%d)
      #   $ git push --tags origin main
      #
      # To get consistent timestamps, avoid doing this just before midnight UTC.
      - if: startsWith(github.ref, 'refs/tags/pypi-')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
