name: release

on:
  push:
    tags:
      - v*
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11, windows-2022]

    steps:
      - uses: actions/checkout@v3
        with:
          repository: tree-sitter/py-tree-sitter
          ref: v0.20.0
          submodules: true
      - uses: actions/checkout@v3
        with:
          path: this-repository
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      # cibuildwheel uses a funny working directory when running tests.
      # This is by design, this way tests import whatever is installed and not from the project.
      # This means that the tests can't load files from the current working directory.
      # Fix them to not rely on current working directory.
      #
      # Also rebuild the languages binary for each wheel.
      # By default it uses modified time with nothing to distinguish different Pythons.
      - run: git apply this-repository/tests.patch
      - if: ${{ startsWith(matrix.os, 'windows') }}
        run: script\fetch-fixtures.cmd
      - if: ${{ !startsWith(matrix.os, 'windows') }}
        run: script/fetch-fixtures
      - run: pip install cibuildwheel==2.9.0
      - run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_TEST_COMMAND: python -m unittest discover -s {project}/tests
          CIBW_ARCHS_MACOS: x86_64 arm64
      - uses: actions/upload-artifact@v2
        with:
          name: wheelhouse
          path: ./wheelhouse/*.whl

  # Ensure that wheel file names in README.md match file names from build
  check-filenames:
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v2
        with:
          name: wheelhouse
      - name: Get file names from README to text file
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            release=$(echo "${{ github.ref }}" | cut -d/ -f3)
            regex="https://github.com/Akuli/py-tree-sitter-builds/releases/download/$release/[^/ ]*\.whl"
          else
            regex="https://github.com/Akuli/py-tree-sitter-builds/releases/download/v[^/ ]*/[^/ ]*\.whl"
          fi
          echo "$regex"
          grep -oE "$regex" README.md | xargs basename -a | sort | uniq > readme_filenames.txt
      - run: |
          printf "%s\n" *.whl | sort | uniq > build_filenames.txt
      - run: diff -u --color=always readme_filenames.txt build_filenames.txt

  # To trigger a release, push a calver-style tag:
  #
  #   $ git tag v$(date +%Y-%m-%d)
  #   $ git push --tags origin
  release:
    runs-on: ubuntu-latest
    # https://stackoverflow.com/a/58478262
    needs: [check-filenames]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheelhouse
      - uses: softprops/action-gh-release@v0.1.14
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: '*.whl'
